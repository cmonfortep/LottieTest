name: Instrumentation tests

on:
  push:
    branches:
      - feature/maestro_to_ci
  schedule:
    - cron: '0 4 * * *' # run at 3 AM UTC
  workflow_dispatch:

jobs:
  instrumentation_tests:
    runs-on: macos-latest
    name: Instrumentation tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: Install maestro
        run: |
          brew tap mobile-dev-inc/tap
          brew install maestro

      # Retrieve the cached emulator snapshot.
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-29

      # Create a new emulator snapshot if it isn't present in the cache.
      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -skin 2400x1080 -memory 4096 -engine qemu2 -netfast -no-audio -no-snapshot -accel on
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: Android checks
        uses: reactiveCircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -skin 2400x1080 -memory 4096 -engine qemu2 -netfast -no-audio -no-snapshot -accel on
          disable-animations: true
          script: ./gradlew installDebug && cd .mobiledev && maestro --platform android test test.yaml || adb shell /system/bin/screencap -p /data/local/tmp/screenshot.png && adb pull /data/local/tmp/screenshot.png screenshot.png;

      - name: Bundle files
        if: always()
        run: find . -type f -name 'screenshot.png' | zip -@ -r screenshots.zip

      - name: Upload screenshot
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: device-screenshot
          path: screenshots.zip